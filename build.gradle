plugins {
    id 'java'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.netty:netty-all:4.1.66.Final',
            'io.reactivex.rxjava3:rxjava:3.1.0',
            'io.reactivex:rxnetty:0.4.20',
            'io.reactivex:rxjava:1.3.8',
            'io.reactivex:rxnetty:0.5.1',

            'io.netty:netty-codec-http:4.1.66.Final',

            'org.glassfish.jersey.core:jersey-server:2.7',
            'org.glassfish.jersey.containers:jersey-container-servlet-core:2.7',
            'org.glassfish.jersey.containers:jersey-container-jetty-http:2.7',

            'org.springframework:spring-core:5.3.8',
            'org.springframework:spring-context:5.3.8',
            'org.springframework:spring-beans:5.3.8',
            'org.springframework:spring-test:5.3.8',

            'com.netflix.karyon:karyon-governator:2.1.00-RC6',
            'com.netflix.karyon:karyon2-core:2.2.0-rc.2',

            'org.slf4j:slf4j-simple:1.7.0',
            'org.slf4j:slf4j-simple:1.7.0',

             'commons-io:commons-io:2.4',
             'io.rest-assured:rest-assured:4.4.0'

    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    implementation 'junit:junit:4.13.1'

}

test {
    useJUnitPlatform()
}

task uberJar(type: Jar){
    manifest.attributes(['Main-Class': 'com.fhfelipefh.cloud.tema8.Main'])

    duplicatesStrategy = 'include'

    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') } .collect { zipTree(it) }
    }
}
